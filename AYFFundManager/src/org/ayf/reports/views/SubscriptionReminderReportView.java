/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.ayf.reports.views;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import org.ayf.models.GenericDefaultTableModel;
import org.ayf.reports.Report;
import org.ayf.reports.ReportData;
import org.ayf.reports.SubscriptionReminderReport;
import org.ayf.util.DateTime;

/**
 *
 * @author om
 */
public class SubscriptionReminderReportView extends BaseReportView {

    /**
     * Creates new form SubscriptionNotificationReportView
     */
    public SubscriptionReminderReportView(Report report) {
        super(report);
        initComponents();
        
        setupTextSearchForReportTable(null);
        
        Integer [] days  = { 15, 30, 45, 60, 90, 120, 150, 180 };
        this.daysRangeCombo.setModel(new DefaultComboBoxModel(days));
        this.daysRangeCombo.setSelectedItem(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportTable = new ReportTable();
        searchoptionsPanel = new javax.swing.JPanel();
        daysRangeCombo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        reportTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(reportTable);

        searchoptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Filter"));

        daysRangeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysRangeComboActionPerformed(evt);
            }
        });

        jLabel1.setText("Subscription of Members ending in coming ");

        jLabel2.setText("Days");

        org.jdesktop.layout.GroupLayout searchoptionsPanelLayout = new org.jdesktop.layout.GroupLayout(searchoptionsPanel);
        searchoptionsPanel.setLayout(searchoptionsPanelLayout);
        searchoptionsPanelLayout.setHorizontalGroup(
            searchoptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(searchoptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 283, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(daysRangeCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(6, 6, 6)
                .add(jLabel2)
                .addContainerGap(263, Short.MAX_VALUE))
        );
        searchoptionsPanelLayout.setVerticalGroup(
            searchoptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, searchoptionsPanelLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(searchoptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(daysRangeCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .add(18, 18, 18))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(searchoptionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(searchTextField)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(refreshButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(searchTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(refreshButton))
                .add(18, 18, 18)
                .add(searchoptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        if(report != null)
        {
            updateReportWithDays();
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void daysRangeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysRangeComboActionPerformed
        updateReportWithDays();
    }//GEN-LAST:event_daysRangeComboActionPerformed


    void updateReportWithDays()
    {
        int index = this.daysRangeCombo.getSelectedIndex();
        
        if(index == -1)
            return;
        
        String strNumberOfDays = this.daysRangeCombo.getSelectedItem().toString();
        
        java.sql.Date today = DateTime.getTodaySQL();
        
        java.sql.Date toDate = DateTime.dateByAdding(today, Integer.parseInt(strNumberOfDays), 0, 0);
        
        if(getReport() instanceof SubscriptionReminderReport)
        {
            SubscriptionReminderReport report = (SubscriptionReminderReport) getReport();
            
            report.setDateRange(today, toDate);
        }
    }
    
    public void reportWillLoad()
    {
        updateReportWithDays();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox daysRangeCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable reportTable;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel searchoptionsPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateView(ReportData data) {
        if(data != null)
        {
            getReportTable().setModel(new GenericDefaultTableModel(data.getData(), data.getColumns()));
            adjustReportTableColumns();
        }
    }

    @Override
    protected JTable getReportTable() 
    {
        return this.reportTable;
    }
}
