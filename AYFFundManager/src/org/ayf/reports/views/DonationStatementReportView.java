/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.ayf.reports.views;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.sql.Date;
import java.text.DecimalFormat;
import javax.swing.JTable;
import org.ayf.managers.DatabaseManager;
import org.ayf.reports.Report;
import org.ayf.reports.ReportData;
import org.ayf.util.DateTime;
import org.ayf.util.StartEndYear;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.title.TextTitle;

/**
 *
 * @author om
 */
public class DonationStatementReportView extends BaseReportView {

    /**
     * Creates new form DonationStatementReportView
     */
    
    DatabaseManager.GroupingOption groupingOption = DatabaseManager.GroupingOption.Year;
    ChartPanel pieChartPanel = null;
    ChartPanel barChartPanel = null;
    
    public DonationStatementReportView(Report report) {
        super(report);
        initComponents();
        initUI();
    }

    public StartEndYear getStartEndYear() {
        return (StartEndYear)this.yearComboBox.getSelectedItem();
    }
    
    public Date getStartYear() {
        return getStartEndYear().getStartYear();
    }

    public Date getEndYear() {
        return getStartEndYear().getEndYear();
    }

    public DatabaseManager.GroupingOption getGroupingOption() {
        return groupingOption;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        yearRadioBtn = new javax.swing.JRadioButton();
        monthRadioBtn = new javax.swing.JRadioButton();
        yearComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        typeRadioBtn = new javax.swing.JRadioButton();
        refreshButton = new javax.swing.JButton();
        statementDescriptionLabel = new javax.swing.JLabel();
        reportPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        totalDonationAmtLabel = new javax.swing.JLabel();

        jLabel1.setText("Total Donation By");

        yearRadioBtn.setText("Year");
        yearRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearRadioBtnActionPerformed(evt);
            }
        });

        monthRadioBtn.setText("Month");
        monthRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthRadioBtnActionPerformed(evt);
            }
        });

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Year");

        typeRadioBtn.setText("Type");
        typeRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeRadioBtnActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        statementDescriptionLabel.setText("jLabel3");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(statementDescriptionLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2))
                        .add(34, 34, 34)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(yearRadioBtn)
                                .add(18, 18, 18)
                                .add(monthRadioBtn))
                            .add(yearComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(typeRadioBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(refreshButton))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(yearRadioBtn)
                    .add(monthRadioBtn)
                    .add(typeRadioBtn)
                    .add(refreshButton))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(yearComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .add(18, 18, 18)
                .add(statementDescriptionLabel))
        );

        reportPanel.setLayout(new java.awt.GridLayout(2, 2));

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(reportTable);

        reportPanel.add(jScrollPane1);

        totalDonationAmtLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        totalDonationAmtLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalDonationAmtLabel.setText("Total Donation Amount : ");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(totalDonationAmtLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(totalDonationAmtLabel)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        reportPanel.add(jPanel3);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(reportPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(reportPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void yearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboBoxActionPerformed
        updateReportInternal();
    }//GEN-LAST:event_yearComboBoxActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        updateReportInternal();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void yearRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearRadioBtnActionPerformed
        this.monthRadioBtn.setSelected(false);
        this.typeRadioBtn.setSelected(false);
        
        this.groupingOption = DatabaseManager.GroupingOption.Year;
        
        updateReportInternal();
    }//GEN-LAST:event_yearRadioBtnActionPerformed

    private void monthRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthRadioBtnActionPerformed
        this.yearRadioBtn.setSelected(false);
        this.typeRadioBtn.setSelected(false);
        
        this.groupingOption = DatabaseManager.GroupingOption.Month;
        
        updateReportInternal();
    }//GEN-LAST:event_monthRadioBtnActionPerformed

    private void typeRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeRadioBtnActionPerformed
        this.yearRadioBtn.setSelected(false);
        this.monthRadioBtn.setSelected(false);
        
        this.groupingOption = DatabaseManager.GroupingOption.Type;
        
        updateReportInternal();
    }//GEN-LAST:event_typeRadioBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton monthRadioBtn;
    private javax.swing.JButton refreshButton;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JTable reportTable;
    private javax.swing.JLabel statementDescriptionLabel;
    private javax.swing.JLabel totalDonationAmtLabel;
    private javax.swing.JRadioButton typeRadioBtn;
    private javax.swing.JComboBox yearComboBox;
    private javax.swing.JRadioButton yearRadioBtn;
    // End of variables declaration//GEN-END:variables

    private void initUI() {
        
        this.yearRadioBtn.setSelected(true);
        this.monthRadioBtn.setSelected(false);
        this.typeRadioBtn.setSelected(false);
        
        populateYearCombo();
        
        this.yearComboBox.setSelectedIndex(0);
        
        pieChartPanel = new ChartPanel(null);
        pieChartPanel.setBackground(new Color(0));
        pieChartPanel.setLayout(new BorderLayout());
        
        barChartPanel = new ChartPanel(null);
        barChartPanel.setBackground(new Color(0));
        barChartPanel.setLayout(new BorderLayout());
        
        this.reportPanel.add(this.pieChartPanel);
        this.reportPanel.add(this.barChartPanel);
        
        updateStatementDescriptionLabel();
        updateDonationAmountLabel();
        
    }
    
    

    private void populateYearCombo() {
        java.sql.Date year = DateTime.getFiscalYearStart(DateTime.getFoundationEstablishmentDate());
        java.sql.Date today = DateTime.getTodaySQL();
        
        int todayYear = DateTime.getYear(today);
        
        this.yearComboBox.removeAllItems();
        
        this.yearComboBox.addItem(new StartEndYear(year, DateTime.getFiscalYearEnd(today)));
        
        while(DateTime.getYear(year) <= todayYear)
        {
            this.yearComboBox.insertItemAt(new StartEndYear(year, DateTime.getFiscalYearEnd(year)), 1);
            year = DateTime.dateByAdding(year, 0, 0, 1);
        }
    }

    private void updateReportInternal() {
        refresh();
        updateStatementDescriptionLabel();
        updateDonationAmountLabel();
    }

    @Override
    public void updateViewDecoration(ReportData data) 
    {
        {
            JFreeChart objChart = ChartFactory.createPieChart (
            "Donation Statemnt",   //Chart title
            data.getPieChartDataSet(),          //Chart Data 
            true,               // include legend?
            true,               // include tooltips?
            false               // include URLs?
            );

            objChart.getPlot().setBackgroundAlpha(0);

            Font font = JFreeChart.DEFAULT_TITLE_FONT.deriveFont(JFreeChart.DEFAULT_TITLE_FONT.getSize() - 4);
            TextTitle title = new TextTitle("Donation Statemnt", font);

            objChart.setTitle(title);

            pieChartPanel.setChart(objChart);
            PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
                "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
            PiePlot plot = (PiePlot)objChart.getPlot();
            plot.setLabelGenerator(gen);
        }
        
        {
            JFreeChart objChart = ChartFactory.createBarChart(
                "Donation Statemnt",   //Chart title
                groupingOption.toString(),
                "Total Amount",
                data.getCategoryDataSet(),          //Chart Data 
                PlotOrientation.VERTICAL, // orientation
                true,                     // include legend
                true,                     // tooltips?
                false                     // URLs?
            );

            objChart.getPlot().setBackgroundAlpha(0);

            Font font = JFreeChart.DEFAULT_TITLE_FONT.deriveFont(JFreeChart.DEFAULT_TITLE_FONT.getSize() - 4);
            TextTitle title = new TextTitle("Donation Statemnt", font);

            objChart.setTitle(title);

            
            barChartPanel.setChart(objChart);
//            PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
//                "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
//            PiePlot plot = (PiePlot)objChart.getPlot();
//            plot.setLabelGenerator(gen);
        }
        
        updateDonationAmountLabel();
    }

    @Override
    protected JTable getReportTable() {
        return this.reportTable;
    }

    private void updateStatementDescriptionLabel() 
    {
        String description = "";
        switch(this.groupingOption)
        {
            case Type:
            {
                description = "Total donation amount by donation type in year "+this.yearComboBox.getSelectedItem();
                break;
            }
            case Month:
            {
                description = "Total donation amount by month in year "+this.yearComboBox.getSelectedItem();
                break;
            }
            case Year:
            {
                description = "Total donation amount by year";
                break;
            }
        }
        
        this.statementDescriptionLabel.setText(description);
    }

    private void updateDonationAmountLabel() {
        ReportData data = this.getReport().getData();
        
        if(data == null)
        {
            this.totalDonationAmtLabel.setText("Total Donation Amount  :  ₹0.0");
            return;
        }
        
        double totalAmount = 0;
        
        for (int i = 0; i < data.getPieChartDataSet().getItemCount(); ++i)
        {
            totalAmount += data.getPieChartDataSet().getValue(i).doubleValue();
        }
        
        this.totalDonationAmtLabel.setText("Total Donation Amount  :  ₹"+totalAmount);
    }
}
