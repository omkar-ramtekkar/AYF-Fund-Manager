/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.ayf.reports.views;

import javax.swing.JTable;
import org.ayf.reports.Report;
import org.ayf.reports.ReportData;
import org.ayf.reports.SubscriptionAmountPendingReport;

/**
 *
 * @author om
 */
public class SubscriptionAmountPendingReportView extends BaseReportView {

    /**
     * Creates new form SubscriptionAmountPendingReportView
     */
    public SubscriptionAmountPendingReportView(Report report) {
        super(report);
        initComponents();
        
        this.infoLabel.setText("<html> <b> Note: Pending amount is calculated as difference between - </b> <br>Total subscription amount to be paid by member from his registeration date - </br> <br>Total subscription amount paid by the member as of today</br></html>");
        setupTextSearchForReportTable(this.searchTextField);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportTable = new ReportTable();
        searchoptionsPanel = new javax.swing.JPanel();
        showOnlyActiveMemberCkBox = new javax.swing.JCheckBox();
        infoLabel = new javax.swing.JLabel();

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        reportTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(reportTable);

        searchoptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Filter"));

        showOnlyActiveMemberCkBox.setText("Show Inactive Members");
        showOnlyActiveMemberCkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showOnlyActiveMemberCkBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout searchoptionsPanelLayout = new org.jdesktop.layout.GroupLayout(searchoptionsPanel);
        searchoptionsPanel.setLayout(searchoptionsPanelLayout);
        searchoptionsPanelLayout.setHorizontalGroup(
            searchoptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(searchoptionsPanelLayout.createSequentialGroup()
                .add(showOnlyActiveMemberCkBox)
                .add(0, 304, Short.MAX_VALUE))
            .add(searchoptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(infoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchoptionsPanelLayout.setVerticalGroup(
            searchoptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(searchoptionsPanelLayout.createSequentialGroup()
                .add(16, 16, 16)
                .add(showOnlyActiveMemberCkBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(infoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(searchoptionsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(searchTextField)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(refreshButton))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(searchTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(refreshButton))
                .add(18, 18, 18)
                .add(searchoptionsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void showOnlyActiveMemberCkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showOnlyActiveMemberCkBoxActionPerformed
        boolean bShowInActiveMembers = this.showOnlyActiveMemberCkBox.isSelected();
        ((SubscriptionAmountPendingReport) getReport()).setShowInactiveMembers(bShowInActiveMembers);
    }//GEN-LAST:event_showOnlyActiveMemberCkBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel infoLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable reportTable;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel searchoptionsPanel;
    private javax.swing.JCheckBox showOnlyActiveMemberCkBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateViewDecoration(ReportData data) {
    }

    @Override
    protected JTable getReportTable() {
        return this.reportTable;
    }
}
